<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <mapper namespace="DepartmentMapper">

    <resultMap type="TreeNode" id="TreeNodeMap">
        <result column="DEPT_ID" property="id"/>
        <result column="SUP_ID" property="pId"/>
        <result column="DEPT_CODE" property="code"/>
        <result column="DEPT_NAME" property="name"/>
        <result column="IS_LEAF" property="leaf"/>
        <result column="SEQUENCE" property="no"/>
    </resultMap>

    <resultMap type="Department" id="DepartmentMap">
        <id column="DEPT_ID" property="deptId"/>
        <result column="DEPT_CODE" property="deptCode"/>
        <result column="DEPT_NAME" property="deptName"/>
        <result column="SUP_ID" property="supId"/>
        <result column="SEQUENCE" property="sequence" />
        <result column="IS_LEAF" property="isLeaf" />
        <result column="DESCRIBED" property="described"/>
        <result column="REMARK" property="address"/>
        <result column="ADDRESS" property="remark"/>
    </resultMap>

    <!-- 表名 -->
    <sql id="tableName">
        T_DEPARTMENT
    </sql>

    <!-- 字段 -->
    <sql id="field">
        DEPT_ID, DEPT_CODE, DEPT_NAME, SUP_ID, DESCRIBED , REMARK, ADDRESS
    </sql>

    <!-- 字段值 -->
    <sql id="fieldValue">
        #{deptId}, #{deptCode}, #{deptName}, #{supId}, #{function}, #{address}, #{remark}
    </sql>

    <select id="getByDeptId" parameterType="pd" resultMap="DepartmentMap">
        select <include refid="field"></include> from <include refid="tableName"></include>
        where DEPT_ID = #{deptId}
    </select>

    <select id="getBySupId" parameterType="String" resultMap="DepartmentMap">
        select top 1 <include refid="field"></include> from <include refid="tableName"></include>
        where SUP_ID = #{supId}
    </select>


    <!-- 获取列表 -->
    <select id="selectDepartment" parameterType="pd" resultMap="DepartmentMap">
        select DEPT_ID, DEPT_CODE, DEPT_NAME, SUP_ID, DESCRIBED, REMARK, ADDRESS
        from T_DEPARTMENT
        WHERE 1=1
    </select>

    <!-- 添加部门信息 -->
    <insert id="saveRelativity" parameterType="Department">
        insert into T_DEPARTMENT(DEPT_CODE, DEPT_NAME,SUP_ID,FUNC,REMARK,ADDRESS)
        values(#{deptCode}, #{deptName},#{supId},#{function},#{address},#{remark})
    </insert>

    <!-- 获取部门总数 -->
    <select id="getDepartmentCount" parameterType="String" resultType="pd">
        SELECT
            count(1) DEPT_CODE
        FROM
            <include refid="tableName"></include>
    </select>

    <!-- 级联获取所有字典列表（获取下级） -->
    <select id="selectDepartmentCascade" parameterType="pd" resultMap="TreeNodeMap">
        WITH TREE AS
        (select DEPT_ID, DEPT_CODE, DEPT_NAME, SUP_ID, DESCRIBED, REMARK, ADDRESS, IS_LEAF, SEQUENCE
        from T_Department
        where 1=1
        <if test="deptInfo != null and deptInfo != ''"><!-- 关键词检索 -->
            AND (
            DEPT_CODE LIKE '%'+#{deptInfo}+'%'
            OR
            DEPT_NAME LIKE '%'+#{deptInfo}+'%'
            )
        </if>
        UNION ALL
        SELECT d.DEPT_ID, d.DEPT_CODE, d.DEPT_NAME, d.SUP_ID, d.DESCRIBED, d.REMARK, d.ADDRESS, d.IS_LEAF, d.SEQUENCE
        FROM T_Department d
        INNER JOIN TREE
        ON d.SUP_ID = TREE.DEPT_CODE
        )
        SELECT DISTINCT DEPT_ID, DEPT_CODE, DEPT_NAME, SUP_ID, DESCRIBED, REMARK, ADDRESS FROM TREE
        OPTION (MAXRECURSION 5) <!-- 限制递归次数 -->
    </select>

    <insert id="saveDepartmentBean" parameterType="Department" useGeneratedKeys="true" keyProperty="DEPT_ID">
        insert into T_Department (<trim suffixOverrides=",">
        <if test="deptCode != null and deptCode != ''">DEPT_CODE,</if>
        <if test="deptName != null and deptName != ''">DEPT_NAME,</if>
        <if test="supId != null and supId != ''">SUP_ID,</if>
        <if test="described != null and described != ''">DESCRIBED,</if>
        <if test="remark != null and remark != ''">REMARK,</if>
        <if test="address != null and address != ''">ADDRESS</if>
    </trim>)
        values(<trim suffixOverrides=",">
        <if test="deptCode != null and deptCode != ''">#{deptCode},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="supId != null and supId != ''">#{supId},</if>
        <if test="described != null and described != ''">#{described},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="address != null and address != ''">#{address}</if>
    </trim>)
    </insert>

    <insert id="saveDepartment" parameterType="pd" useGeneratedKeys="true" keyProperty="DEPT_ID">
        insert into T_Department (<trim suffixOverrides=",">
        <if test="deptCode != null and deptCode != ''">DEPT_CODE,</if>
        <if test="deptName != null and deptName != ''">DEPT_NAME,</if>
        <if test="supId != null and supId != ''">SUP_ID,</if>
        <if test="described != null and described != ''">DESCRIBED,</if>
        <if test="remark != null and remark != ''">REMARK,</if>
        <if test="address != null and address != ''">ADDRESS</if>
    </trim>)
        values(<trim suffixOverrides=",">
        <if test="deptCode != null and deptCode != ''">#{deptCode},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="supId != null and supId != ''">#{supId},</if>
        <if test="described != null and described != ''">#{described},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="address != null and address != ''">#{address}</if>
    </trim>)
    </insert>

    <update id="updateDepartment" parameterType="pd">
        update T_Department
        <set>
            <if test="deptCode != null and deptCode != ''">DEPT_CODE=#{deptCode},</if>
            <if test="deptName != null and deptName != ''">DEPT_NAME=#{deptName},</if>
            <if test="supId != null and supId != ''">SUP_ID=#{supId},</if>
            <if test="described != null and described != ''">DESCRIBED=#{described},</if>
            <if test="remark != null and remark != ''">REMARK=#{remark},</if>
            <if test="address != null and address != ''">ADDRESS=#{address}</if>
        </set>
        where DEPT_ID = #{deptId}
    </update>

    <delete id="deleteDepartment" parameterType="pd">
        delete from T_Department where DEPT_ID in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
